<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/context  
		    http://www.springframework.org/schema/context/spring-context.xsd
		    http://www.springframework.org/schema/util
			http://www.springframework.org/schema/util/spring-util.xsd"><!-- -3.0 指定版本号：不指定版本号，就使用jar包中的版本 -->

	<!-- 自动扫描与装配bean -->
	<context:component-scan base-package="wl.*"></context:component-scan>

	<!-- 导入外部的properties配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
		<!-- 直接注入properties -->
		<util:properties id="email" location="classpath:email.properties" />

		<!-- 配置数据库连接池 -->
		<!-- <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"> 
			<property name="jdbcUrl" value="${jdbcUrl}"></property> <property name="driverClass" 
			value="${driverClass}"></property> <property name="user" value="${username}"></property> 
			<property name="password" value="${password}"></property> <property name="initialPoolSize" 
			value="3"></property> <property name="minPoolSize" value="3"></property> 
			<property name="maxPoolSize" value="5"></property> <property name="acquireIncrement" 
			value="3"></property> <property name="maxStatements" value="8"></property> 
			<property name="maxStatementsPerConnection" value="5"></property> <property 
			name="maxIdleTime" value="1800"></property> </bean> -->
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
			init-method="init" destroy-method="close">
			<!-- <property name="driverClassName" value="${jdbc.driver}" /> -->
			<property name="url" value="${jdbcUrl}" />
			<property name="username" value="${username}" />
			<property name="password" value="${password}" />
			<!-- sql统计功能就不能用stat -->
			<!-- <property name="filters" value="stat" /> -->
			<property name="filters" value="config" />
			<property name="connectionProperties" value="config.decrypt=true" />
			<property name="maxActive" value="10" />
			<property name="initialSize" value="1" />
			<property name="maxWait" value="60000" />
			<property name="minIdle" value="1" />
			<property name="timeBetweenEvictionRunsMillis" value="60000" />
			<property name="minEvictableIdleTimeMillis" value="300000" />
			<property name="validationQuery" value="SELECT 'x'" />
			<property name="testWhileIdle" value="true" />
			<property name="testOnBorrow" value="false" />
			<property name="testOnReturn" value="false" />
			<property name="poolPreparedStatements" value="true" />
			<property name="maxPoolPreparedStatementPerConnectionSize"
				value="50" />
			<property name="maxOpenPreparedStatements" value="100" />
		</bean>

		<!-- 配置SessionFactory -->
		<bean id="sessionFactory"
			class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"><!-- org.springframework.orm.hibernate3.LocalSessionFactoryBean -->
			<property name="dataSource" ref="dataSource"></property>
			<!-- <property name="configLocation" value="classpath:hibernate.cfg.xml"></property> -->
			<property name="hibernateProperties">
				<props>
					<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
					<!-- <prop key="hibernate.current_session_context_class">thread</prop> -->
					<prop key="hibernate.show_sql">true</prop>
					<prop key="hibernate.format_sql">true</prop>
					<prop key="hibernate.hbm2ddl.auto">update</prop>
				</props>
			</property>
			<property name="packagesToScan" value="wl.entity" />
			<!-- <property name="packagesToScan"> <list> <value>wl.entity</value> 
				</list> </property> -->
		</bean>

		<!-- 配置声明式的事务管理（采用基于注解的方式） -->
		<bean id="txManager"
			class="org.springframework.orm.hibernate3.HibernateTransactionManager">
			<property name="sessionFactory" ref="sessionFactory"></property>
		</bean>
		<tx:annotation-driven transaction-manager="txManager" />
		<!-- <tx:advice id="txAdvice" transaction-manager="transactionManager"> 
			<tx:attributes> <tx:method name="select*" read-only="true"/> <tx:method name="get*" 
			read-only="true"/> <tx:method name="load*" read-only="true"/> <tx:method 
			name="find*" read-only="true"/> <tx:method name="query*" read-only="true"/> 
			<tx:method name="read*" read-only="true"/> <tx:method name="sync*"/> <tx:method 
			name="*" propagation="REQUIRED" rollback-for="Exception"/> </tx:attributes> 
			</tx:advice> <aop:config> <aop:pointcut id="pointcut" expression="execution(* 
			com.lavasoft.demo.service.*Impl.*(..))"/> <aop:advisor advice-ref="txAdvice" 
			pointcut-ref="pointcut"/> </aop:config> -->
</beans>
